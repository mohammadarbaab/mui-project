
    size: 100px;
 

    width: 20px;
 
./HomeStyle.css
 
width:"100%"
 

      <h1>Home Page</h1>
 

      <h1>Footer</h1>
 

    display: flex;
    flex-direction: column;
 
0px 
 
 width:"200px"
 

            }}
 

            sx={{
              display:{xs:"block",sm:"none"}
 

    align-items: center;
    justify-content: center;
 

    display: flex;
    flex-direction: column;
 
navigation-menu
 

    flex-direction: ;
 

    align-items: center;
    justify-content: center;
 

    display: flex;
    flex-direction: column;
 
navigation-menu
 
<Drawer/
 

          </Box>
 

          <Box sx={{display:{xs:"none",sm:"block"}}}>
 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
}

.navigation-menu li {
    margin: 0px 20px; 
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif;
    
}

 
/* Adjust this value to increase or decrease the space between links */
 
 justify-content: center;
    align-items: center;
 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
}

.navigation-menu li {
    margin: 0 15px; /* Adjust this value to increase or decrease the space between links */
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif;
}

 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
}

.navigation-menu li {
    margin: 0 20px;  /* Adds space between each item */
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif;  /* Ensure the font is correctly defined */
}

 

import './index.css'
 

    padding: 0;  /* Ensure no default padding affects the layout */
    margin: 0;  /* Ensure no default margin affects the layout */
 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;  /* Ensure no default padding affects the layout */
    margin: 0;  /* Ensure no default margin affects the layout */
}

.navigation-menu li {
    margin: 0 20px;  /* Adds space between each item */
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif;  /* Ensure the font is correctly defined */
}

 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;  /* Ensure no default padding affects the layout */
    margin: 0;  /* Ensure no default margin affects the layout */
}

.navigation-menu li {
    margin: 0 20px;  /* Adds space between each item */
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif;  /* Ensure the font is correctly defined */
}

 

    padding: 0; /* Ensure no default padding affects the layout */
    margin: 0;  /* Ensure no default margin affects the layout */
 
.navigation-menu {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0; /* Ensure no default padding/margin affects the layout */
    margin: 0; /* Ensure no default padding/margin affects the layout */
}

.navigation-menu li {
    margin: 0 20px;
}

.navigation-menu li a {
    text-decoration: none;
    color: white;
    font-family: 'Roboto', sans-serif; /* Ensure the font is correctly defined */
}

 
.navigation-menu{
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
}
.navigation-menu li {
    margin: 0px 20px;
}
.navigation-menu li a{
    text-decoration: none;
    color: white;
    font-family: ro;
}
 
.navigation-menu{
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
}
.navigation-menu li {
    margin: 0px 20px;
}
.navigation-menu li a{
    text-decoration: none;
    color: white;
    font-family: ro;
}
 
font-family: 'roboto',sans-serif;
 

import '../../styles/HeaderStyle.css';
 
src/
 

import '../../../src/styles/HeaderStyle.css'
 

              <Link></Link>
 
sx={{mr:2}}
 
Foodie
 

      Header
 
// import { Home } from "@mui/icons-material";
 

    <About></About>
 

    <Home></Home>
 


// import {Typography} from '@mui/material
 

      </div>
 

      <div>
 

import { BrowserRouter } from 'react-router-dom';
 

    </BrowserRouter>
 

    <BrowserRouter>
 
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import CssBaseline from '@mui/material/CssBaseline';

const theme = createTheme();

ReactDOM.render(
  <ThemeProvider theme={theme}>
    <CssBaseline />
    <App />
  </ThemeProvider>,
  document.getElementById('root')
);

 

          <Route path="*" element={<PageNotFound />} />
 

import PageNotFound from './pages/PageNotFound'; 
 
Pagenotfound 
 
Pagenotfound
 

import Pagenotfound from "./pages/Pagenotfound";
 
agenotfound
 

import Pagenotfound './'
 

import { Menu } from "@mui/material";
 
signin
 

        <Navbar />
 
signup
 

    <BrouserRouter></BrouserRouter>
 
BrouserRouter
 

imo
 

import BrouserRouter fr
 

    <Layout>
    <h1>Resort</h1>
    </Layout>
 
<div>
      About Pge
    </div>
 

      <h1>Layout</h1>
 



 
import "./App.c
 

// import Form from './components/Form';
 

import CardCompo from "./components/CardCompo";
 
 import Navi from "./components/Navi";
 

      {/* <Form />     */}
      {/* <Navi /> */}
      <CardCompo />
 
MUI PROJECT
 

    backgroundColor:"gray"
 
rgba(0, 0, 0, 0.8)
 
{
  "name": "mui-pro",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.4",
    "@emotion/styled": "^11.11.5",
    "@mui/icons-material": "^5.15.20",
    "@mui/material": "^5.15.20",
    "@mui/styles": "^5.15.20",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "ajv": "^8.16.0",
    "ajv-keywords": "^3.5.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

 

import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import CssBaseline from '@mui/material/CssBaseline'

const theme = createTheme();

ReactDOM.render(
  <ThemeProvider theme={theme}>
    <CssBaseline />
    <App />
  </ThemeProvider>,
  document.getElementById('root')
);

 
import React, { useState } from 'react';
import { Box, Card, CardContent, Typography } from '@mui/material';
import {makeStyles} from '@m'

const useStyles = makeStyles((theme) => ({
  dropdown: {
    position: 'absolute',
    top: '100%',
    left: 0,
    width: '100%',
    height: '100vh',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    zIndex: 1,
  },
  card: {
    width: '100%',
    height: '100vh',
  },
}));

const App = () => {
  const classes = useStyles();
  const [isHovered, setIsHovered] = useState(false);

  return (
    <Box
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      sx={{ position: 'relative', width: '200px' }}
    >
      <Typography variant="h6">Hover over me</Typography>
      {isHovered && (
        <Box className={classes.dropdown}>
          <Card className={classes.card}>
            <CardContent>
              <Typography variant="h5">Dropdown Content</Typography>
            </CardContent>
          </Card>
        </Box>
      )}
    </Box>
  );
};

export default App;

 
'@mui/material';
 

import makeStyles from '@mui/styles';
 
{
  "name": "mui-pro",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.4",
    "@emotion/styled": "^11.11.5",
    "@mui/icons-material": "^5.15.20",
    "@mui/material": "^5.15.20",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "ajv": "^8.16.0",
    "ajv-keywords": "^3.5.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

 

import {makeStyles} from '@mui/material';
 

import { makeStyles } from '@mui/styles';
 
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

 
// import {Typography} from '@mui/material'
import CardCompo from "./components/CardCompo";
import "./App.css";
// import Form from './components/Form';
// import Navi from "./components/Navi";

function App() {
  return (
    <div>
      {/* <Form />     */}
      {/* <Navi /> */}
      <CardCompo />
    </div>
  );
}

export default App;

 

        </CardMedia>
 

import  from '@mui/material'
 

import { Card } from '@mui/material';
 

import Navi from './components/navi';
 
navi
 
</FormControlLabel>
 
// Correct variant
 
// Added label for better UX
 
// Controlled component
 

        <TextField 
          name="password" 
          type="password" 
          variant="outlined" // Correct variant
          label="Password" // Added label for better UX
          value={inputs.password} // Controlled component
          onChange={(e) => setInputs({ ...inputs, password: e.target.value })} // Handle change
        />
 

          label="Email" // Added label for better UX
          value={inputs.email} // Controlled component
          onChange={(e) => setInputs({ ...inputs, email: e.target.value })} 
 

          value={inputs.name}// Handle change
 

          onChange={(e) => setInputs({ ...inputs, name: e.target.value })} 
 

          label="Name"
 
// Added label for better UX
 
// Controlled component
 
Button 
 

    <h1>mui css</h1> 
 
import logo from './logo.svg';
 

      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
 

    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
 

    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/
 
 className="App"
 
.App {
  text-align: center;
}

.App-logo {
  height: 4min;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

 
